{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/https---github.com-James119-nderema-Timetable_Frontend/Components/RoomsPage/rooms.jsx"],"sourcesContent":["'use client';\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst fetchRooms = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:9921/rooms\");\r\n    console.log(\"Fetched rooms:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching rooms:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst RoomsPage = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeCategory, setActiveCategory] = useState(\"All Rooms\");\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const getRooms = async () => {\r\n      const data = await fetchRooms();\r\n      setRooms(data);\r\n      setFilteredRooms(data);\r\n      setLoading(false);\r\n    };\r\n    getRooms();\r\n  }, []);\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setActiveCategory(category);\r\n    if (category === \"All Rooms\") {\r\n      setFilteredRooms(rooms);\r\n    } else {\r\n      const filtered = rooms.filter((room) => room.roomType === category);\r\n      setFilteredRooms(filtered);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRoom = async (roomId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:9921/rooms/${roomId}`);\r\n      const updatedRooms = rooms.filter((room) => room.roomId !== roomId);\r\n      setRooms(updatedRooms);\r\n      setFilteredRooms(updatedRooms);\r\n    } catch (error) {\r\n      console.error(\"Error deleting room:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditRoom = (roomId) => {\r\n    router.push(`/rooms/edit/${roomId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 sm:p-6\">\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex flex-col sm:flex-row sm:justify-between sm:items-center\">\r\n        <div>\r\n          <h3 className=\"text-lg text-green-900 font-semibold\">Rooms Management</h3>\r\n          <p className=\"text-sm text-gray-500\">Manage and monitor all available rooms</p>\r\n        </div>\r\n        <button\r\n          onClick={() => router.push('/rooms/add')}\r\n          className=\"mt-4 sm:mt-0 px-4 py-2 bg-indigo-600 text-white rounded-md text-sm font-medium hover:bg-indigo-700\">\r\n          Add New Room\r\n        </button>\r\n      </div>\r\n\r\n      {/* Category Filters */}\r\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n        <div className=\"p-4 border-b flex flex-wrap gap-2 sm:gap-4\">\r\n          {[\"All Rooms\", \"Lecture Hall\", \"Lab\", \"Classroom\"].map((category) => (\r\n            <button\r\n              key={category}\r\n              className={`px-3 py-1 rounded-md text-sm font-medium transition ${\r\n                activeCategory === category\r\n                  ? \"bg-indigo-100 text-indigo-600\"\r\n                  : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\r\n              }`}\r\n              onClick={() => handleCategoryClick(category)}\r\n            >\r\n              {category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Room Table */}\r\n        {loading ? (\r\n          <div className=\"p-4 text-center text-gray-500\">Loading rooms...</div>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full min-w-[600px] sm:min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Room ID\r\n                  </th>\r\n                  <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Room Name\r\n                  </th>\r\n                  <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Room Type\r\n                  </th>\r\n                  <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Capacity\r\n                  </th>\r\n                  <th className=\"px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredRooms.length > 0 ? (\r\n                  filteredRooms.map((room) => (\r\n                    <tr key={room.roomId} className=\"hover:bg-gray-100\">\r\n                      <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {room.roomId}\r\n                      </td>\r\n                      <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {room.roomName}\r\n                      </td>\r\n                      <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {room.roomType}\r\n                      </td>\r\n                      <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {room.roomCapacity}\r\n                      </td>\r\n                      <td className=\"px-4 sm:px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            className=\"text-indigo-600 hover:text-indigo-900\"\r\n                            onClick={() => handleEditRoom(room.roomId)}\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            className=\"text-red-600 hover:text-red-900\"\r\n                            onClick={() => handleDeleteRoom(room.roomId)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"px-4 sm:px-6 py-4 text-center text-gray-500\">\r\n                      No rooms found.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomsPage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}