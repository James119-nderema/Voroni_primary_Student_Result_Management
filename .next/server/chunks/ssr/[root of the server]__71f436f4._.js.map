{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/Timetable-web/Components/LoginService.js"],"sourcesContent":["export const loginUser = async (username, password) => {\r\n  try {\r\n    const response = await fetch('http://localhost:9921/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType && contentType.includes('application/json')) {\r\n      const data = await response.json();\r\n      console.log('Login response:', data);\r\n\r\n      // Check for tokens and save them securely\r\n      if (data.tokens && data.tokens.accessToken && data.tokens.refreshToken) {\r\n        console.log('Tokens received:', data.tokens);\r\n        localStorage.setItem('accessToken', data.tokens.accessToken);\r\n        localStorage.setItem('refreshToken', data.tokens.refreshToken);\r\n      } else {\r\n        console.warn('Tokens not found in the response');\r\n      }\r\n\r\n      //check user profile\r\n      if(data.profile && data.profile.firstName && data.profile.lastName) {\r\n        console.log('User profile:', data.profile);\r\n        localStorage.setItem('firstName', data.profile.firstName);\r\n        localStorage.setItem('lastName', data.profile.lastName);\r\n       \r\n      }\r\n\r\n      return data;\r\n    } else {\r\n      const text = await response.text();\r\n      console.log('Login response (text):', text);\r\n      return { errorMessage: text };\r\n    }\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    return { errorMessage: 'Network error occurred' };\r\n  }\r\n};\r\n\r\nexport const registerUser = async (username, password, firstName, lastName) => {\r\n  try {\r\n    const response = await fetch('http://localhost:9921/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password, firstName, lastName }),\r\n    });\r\n    \r\n    // Check if the response is JSON\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType && contentType.includes('application/json')) {\r\n      const data = await response.json();\r\n      console.log('Register response:', data);\r\n      return data;\r\n    } else {\r\n      // Handle text response\r\n      const text = await response.text();\r\n      console.log('Register response (text):', text);\r\n      // For a successful text response like \"User registered Successfully\"\r\n      if (response.ok) {\r\n        return { username, firstName, lastName }; // Create a mock profile to indicate success\r\n      }\r\n      return { errorMessage: text };\r\n    }\r\n  } catch (error) {\r\n    console.error('Register error:', error);\r\n    return { errorMessage: 'Network error occurred' };\r\n  }\r\n};\r\n\r\n// Function to add authentication headers\r\nexport const addAuthHeaders = (headers = {}) => {\r\n  if (typeof window !== 'undefined') {\r\n    // Ensure this code runs only in the browser\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (accessToken) {\r\n      return {\r\n        ...headers,\r\n        Authorization: `Bearer ${accessToken}`,\r\n      };\r\n    }\r\n  }\r\n  return headers;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,OAAO,UAAU;IACxC,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,+BAA+B;YAC1D,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;YAAS;QAC5C;QAEA,MAAM,cAAc,SAAS,OAAO,CAAC,GAAG,CAAC;QACzC,IAAI,eAAe,YAAY,QAAQ,CAAC,qBAAqB;YAC3D,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,mBAAmB;YAE/B,0CAA0C;YAC1C,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC,WAAW,IAAI,KAAK,MAAM,CAAC,YAAY,EAAE;gBACtE,QAAQ,GAAG,CAAC,oBAAoB,KAAK,MAAM;gBAC3C,aAAa,OAAO,CAAC,eAAe,KAAK,MAAM,CAAC,WAAW;gBAC3D,aAAa,OAAO,CAAC,gBAAgB,KAAK,MAAM,CAAC,YAAY;YAC/D,OAAO;gBACL,QAAQ,IAAI,CAAC;YACf;YAEA,oBAAoB;YACpB,IAAG,KAAK,OAAO,IAAI,KAAK,OAAO,CAAC,SAAS,IAAI,KAAK,OAAO,CAAC,QAAQ,EAAE;gBAClE,QAAQ,GAAG,CAAC,iBAAiB,KAAK,OAAO;gBACzC,aAAa,OAAO,CAAC,aAAa,KAAK,OAAO,CAAC,SAAS;gBACxD,aAAa,OAAO,CAAC,YAAY,KAAK,OAAO,CAAC,QAAQ;YAExD;YAEA,OAAO;QACT,OAAO;YACL,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,0BAA0B;YACtC,OAAO;gBAAE,cAAc;YAAK;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YAAE,cAAc;QAAyB;IAClD;AACF;AAEO,MAAM,eAAe,OAAO,UAAU,UAAU,WAAW;IAChE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,kCAAkC;YAC7D,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAU;gBAAU;gBAAW;YAAS;QACjE;QAEA,gCAAgC;QAChC,MAAM,cAAc,SAAS,OAAO,CAAC,GAAG,CAAC;QACzC,IAAI,eAAe,YAAY,QAAQ,CAAC,qBAAqB;YAC3D,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,sBAAsB;YAClC,OAAO;QACT,OAAO;YACL,uBAAuB;YACvB,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,6BAA6B;YACzC,qEAAqE;YACrE,IAAI,SAAS,EAAE,EAAE;gBACf,OAAO;oBAAE;oBAAU;oBAAW;gBAAS,GAAG,4CAA4C;YACxF;YACA,OAAO;gBAAE,cAAc;YAAK;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO;YAAE,cAAc;QAAyB;IAClD;AACF;AAGO,MAAM,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACzC,uCAAmC;;IASnC;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/Timetable-web/Components/Login.js"],"sourcesContent":["'use client';\r\nimport React, { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { loginUser, registerUser } from './LoginService';\r\n\r\nconst Login = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\r\n  const [forgotEmail, setForgotEmail] = useState('');\r\n  const [resetSent, setResetSent] = useState(false);\r\n\r\n  const router = useRouter();\r\n\r\n  const toggleMode = () => {\r\n    // Create a smooth transition by first setting loading to clear the form\r\n    setIsLogin(!isLogin);\r\n    setUsername('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n    setFirstName('');\r\n    setLastName('');\r\n    setError('');\r\n    setShowForgotPassword(false);\r\n  };\r\n\r\n  const handleForgotPassword = (e) => {\r\n    e.preventDefault();\r\n    if (!forgotEmail) {\r\n      setError('Please enter your email address');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setResetSent(true);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      let response;\r\n      if (isLogin) {\r\n        response = await loginUser(username, password);\r\n\r\n        if (response && !response.errorMessage) {\r\n          // Ensure firstName and lastName are present in the response\r\n\r\n          // Redirect to dashboard\r\n          setTimeout(() => {\r\n            router.push('/dashboard');\r\n          }, 500);\r\n          return;\r\n        }\r\n      } else {\r\n        if (password !== confirmPassword) {\r\n          setError('Passwords do not match');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        if (password.length < 8) {\r\n          setError('Password must be at least 8 characters long');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        response = await registerUser(username, password, firstName, lastName);\r\n\r\n        if (response && !response.errorMessage) {\r\n        \r\n          // Redirect to login page\r\n          setTimeout(() => {\r\n            setIsLogin(true);\r\n          }, 500);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (response && response.errorMessage) {\r\n        setError(response.errorMessage);\r\n        return;\r\n      }\r\n\r\n      if (response) {\r\n        // Show success animation before redirecting\r\n        setTimeout(() => {\r\n          router.push('/dashboard');\r\n        }, 500);\r\n      } else {\r\n        setError('An unexpected error occurred');\r\n      }\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n      setError('An error occurred. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Main container animation\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { \r\n      opacity: 1,\r\n      transition: { \r\n        duration: 0.5\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Individual field animations\r\n  const itemVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: { \r\n      y: 0, \r\n      opacity: 1,\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  // Simplified animations to ensure they work properly\r\n  const formVariants = {\r\n    initial: { opacity: 0 },\r\n    animate: { opacity: 1 },\r\n    exit: { opacity: 0 }\r\n  };\r\n\r\n  const renderLoginSignupForm = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-3xl font-extrabold text-blue-800\">\r\n          {isLogin ? 'Welcome back' : 'Create an account'}\r\n        </h1>\r\n        <p className=\"mt-2 text-sm text-blue-600\">\r\n          {isLogin ? 'Sign in to your account' : 'Fill in your details to get started'}\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"min-h-[48px]\"> {/* Reserve space for the error message */}\r\n        <AnimatePresence>\r\n          {error && (\r\n            <motion.div \r\n              initial={{ opacity: 0, y: -10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -10 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\"\r\n            >\r\n              {error}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      \r\n      <form className=\"space-y-5\" onSubmit={handleSubmit}>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-blue-700\">\r\n              Username\r\n            </label>\r\n            <input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              autoComplete=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 text-black\"\r\n              placeholder=\"username\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-blue-700\">\r\n                Password\r\n              </label>\r\n              {isLogin && (\r\n                <div className=\"text-sm\">\r\n                  <button \r\n                    type=\"button\"\r\n                    onClick={() => setShowForgotPassword(true)}\r\n                    className=\"font-medium text-blue-600 hover:text-blue-800 transition-colors duration-200 focus:outline-none\"\r\n                  >\r\n                    Forgot password?\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete={isLogin ? \"current-password\" : \"new-password\"}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 text-black\"\r\n            />\r\n            {!isLogin && (\r\n              <p className=\"mt-1 text-xs text-blue-500\">Password must be at least 8 characters</p>\r\n            )}\r\n          </div>\r\n          \r\n          {!isLogin && (\r\n            <>\r\n              <div>\r\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-blue-700\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 text-black\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-blue-700\">\r\n                    First Name\r\n                  </label>\r\n                  <input\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    autoComplete=\"given-name\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-blue-700\">\r\n                    Last Name\r\n                  </label>\r\n                  <input\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    autoComplete=\"family-name\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <motion.div whileHover={{ scale: 1.02 }} whileTap={{ scale: 0.98 }}>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 items-center\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n                {isLogin ? 'Signing in...' : 'Creating account...'}\r\n              </>\r\n            ) : (\r\n              isLogin ? 'Sign in' : 'Create account'\r\n            )}\r\n          </button>\r\n        </motion.div>\r\n      </form>\r\n      \r\n      <div className=\"text-center mt-4\">\r\n        <p className=\"text-sm text-blue-600\">\r\n          {isLogin ? \"Don't have an account?\" : \"Already have an account?\"}{' '}\r\n          <motion.button \r\n            type=\"button\"\r\n            onClick={toggleMode} \r\n            className=\"font-medium text-blue-700 hover:text-blue-900 underline focus:outline-none transition-colors duration-200\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            {isLogin ? 'Sign up' : 'Sign in'}\r\n          </motion.button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderForgotPasswordForm = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-3xl font-extrabold text-blue-800\">Reset Password</h1>\r\n        <p className=\"mt-2 text-sm text-blue-600\">\r\n          Enter your email to receive a password reset link\r\n        </p>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"p-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {resetSent ? (\r\n        <div className=\"p-6 bg-green-50 rounded-lg border border-green-200 text-center\">\r\n          <svg className=\"w-16 h-16 mx-auto text-green-500 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n          </svg>\r\n          <h3 className=\"text-xl font-bold text-green-800 mb-2\">Reset Link Sent</h3>\r\n          <p className=\"text-green-700\">\r\n            We've sent a password reset link to your email address. Please check your inbox and follow the instructions.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <form className=\"space-y-5\" onSubmit={handleForgotPassword}>\r\n          <div>\r\n            <label htmlFor=\"forgotEmail\" className=\"block text-sm font-medium text-blue-700\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              id=\"forgotEmail\"\r\n              name=\"forgotEmail\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              value={forgotEmail}\r\n              onChange={(e) => setForgotEmail(e.target.value)}\r\n              className=\"block w-full px-3 py-2 mt-1 border border-blue-200 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n              placeholder=\"your@email.com\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex space-x-4\">\r\n            <motion.button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"flex-1 justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 flex items-center\"\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                  </svg>\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                'Send Reset Link'\r\n              )}\r\n            </motion.button>\r\n            \r\n            <motion.button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setShowForgotPassword(false);\r\n                setResetSent(false);\r\n                setForgotEmail('');\r\n                setError('');\r\n              }}\r\n              className=\"py-2 px-4 border border-blue-300 rounded-md shadow-sm text-sm font-medium text-blue-700 bg-white hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200\"\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n            >\r\n              Back\r\n            </motion.button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-r from-blue-50 to-blue-200\">\r\n      <motion.div \r\n        className=\"w-full max-w-md p-8 bg-white rounded-xl shadow-lg\"\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n      >\r\n        {showForgotPassword ? renderForgotPasswordForm() : renderLoginSignupForm()}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/Timetable-web/app/login/page.js"],"sourcesContent":["'use client';\r\nimport Login from '@/Components/Login';\r\n\r\nexport default function LoginPage() {\r\n  return <Login />;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,8OAAC,mHAAA,CAAA,UAAK;;;;;AACf","debugId":null}}]
}