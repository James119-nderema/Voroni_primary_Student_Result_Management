{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/https---github.com-James119-nderema-Timetable_Frontend/Components/ProgramPage/ProgramCourses.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSearchParams } from 'next/navigation'; // ✅ Replacing useRouter with useSearchParams\r\nimport axios from 'axios';\r\n\r\nconst ProgramCourses = () => {\r\n  const searchParams = useSearchParams();\r\n  const programId = searchParams.get('programId'); // ✅ Get programId from URL params\r\n\r\n  const [periods, setPeriods] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedPeriod, setSelectedPeriod] = useState('');\r\n  const [availableCoursesSearch, setAvailableCoursesSearch] = useState('');\r\n  const [periodCoursesSearch, setPeriodCoursesSearch] = useState('');\r\n  const [periodCourses, setPeriodCourses] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch periods and courses from the API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const [periodsResponse, coursesResponse] = await Promise.all([\r\n          axios.get('http://localhost:9921/periods'),\r\n          axios.get('http://localhost:9921/courses'),\r\n        ]);\r\n\r\n        const safePeriods = periodsResponse.data\r\n          .filter((period) => period.id) // ✅ Ensuring valid period IDs\r\n          .map((period, index) => ({\r\n            ...period,\r\n            uniqueId: `period-${period.id}`,\r\n            name: period.name || `Period ${index + 1}`,\r\n          }));\r\n\r\n        if (safePeriods.length === 0) {\r\n          throw new Error('No valid periods found.');\r\n        }\r\n\r\n        const safeCourses = coursesResponse.data.map((course, index) => ({\r\n          ...course,\r\n          uniqueId: `course-${course.id}`,\r\n          courseCode: course.courseCode || `COURSE-${index + 1}`,\r\n          name: course.name || `Unnamed Course ${index + 1}`,\r\n          department: course.department || 'Unknown Department',\r\n        }));\r\n\r\n        setPeriods(safePeriods);\r\n        setCourses(safeCourses);\r\n\r\n        // Set first period as default if available\r\n        setSelectedPeriod(safePeriods[0]?.uniqueId || '');\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError('Failed to load data. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Filter available courses\r\n  const filteredAvailableCourses = useMemo(() => {\r\n    const currentPeriodCourses = periodCourses[selectedPeriod] || [];\r\n    return courses.filter(\r\n      (course) =>\r\n        course.uniqueId &&\r\n        !currentPeriodCourses.some((c) => c.uniqueId === course.uniqueId) &&\r\n        course.courseCode.toLowerCase().includes(availableCoursesSearch.toLowerCase())\r\n    );\r\n  }, [availableCoursesSearch, selectedPeriod, periodCourses, courses]);\r\n\r\n  // Filter courses for the selected period\r\n  const filteredPeriodCourses = useMemo(() => {\r\n    return (periodCourses[selectedPeriod] || []).filter(\r\n      (course) =>\r\n        course.uniqueId &&\r\n        course.courseCode.toLowerCase().includes(periodCoursesSearch.toLowerCase())\r\n    );\r\n  }, [periodCoursesSearch, selectedPeriod, periodCourses]);\r\n\r\n  // Add course to the selected period\r\n  const addCourseToPeriod = (course) => {\r\n    setPeriodCourses((prev) => ({\r\n      ...prev,\r\n      [selectedPeriod]: [...(prev[selectedPeriod] || []), course],\r\n    }));\r\n  };\r\n\r\n  // Remove course from the selected period\r\n  const removeCourseFromPeriod = (courseToRemove) => {\r\n    setPeriodCourses((prev) => ({\r\n      ...prev,\r\n      [selectedPeriod]: prev[selectedPeriod]?.filter(\r\n        (course) => course.uniqueId !== courseToRemove.uniqueId\r\n      ) || [],\r\n    }));\r\n  };\r\n\r\n  // Handle submit\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (!programId) {\r\n        alert('Program ID is missing.');\r\n        return;\r\n      }\r\n\r\n      // Prepare the payload\r\n      const selectedCourses = periodCourses[selectedPeriod] || [];\r\n      const courseIds = selectedCourses.map((course) => course.id);\r\n\r\n      const payload = {\r\n        programId, // The program ID\r\n        periodId: selectedPeriod.replace('period-', ''), // Extract actual period ID\r\n        courseIds, // List of course IDs\r\n      };\r\n\r\n      console.log('Submitting data:', payload);\r\n\r\n      // Make the POST request to the backend\r\n      const response = await axios.post('http://localhost:9921/programCourses', payload);\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        alert('Courses submitted successfully!');\r\n      } else {\r\n        alert('Failed to submit courses. Please try again.');\r\n      }\r\n\r\n      // Clear data after successful submission\r\n      setPeriodCourses({});\r\n      setAvailableCoursesSearch('');\r\n      setPeriodCoursesSearch('');\r\n    } catch (error) {\r\n      console.error('Submission Error:', error);\r\n      alert('Failed to submit courses. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"p-6 text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-6 text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">Program Courses Dashboard</h1>\r\n        <p className=\"text-gray-600\">Manage courses for each period of the program.</p>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <label htmlFor=\"period-select\" className=\"block text-sm font-medium text-gray-700\">\r\n          Select Period\r\n        </label>\r\n        <select\r\n          id=\"period-select\"\r\n          value={selectedPeriod}\r\n          onChange={(e) => setSelectedPeriod(e.target.value)}\r\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n        >\r\n          {periods.map((period) => (\r\n            <option key={period.uniqueId} value={period.uniqueId}>\r\n              {period.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-6\">\r\n        {/* Available Courses */}\r\n        <div className=\"border rounded-lg shadow-md\">\r\n          <div className=\"p-4 border-b\">\r\n            <h2 className=\"text-lg font-semibold\">Available Courses</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search available courses\"\r\n              value={availableCoursesSearch}\r\n              onChange={(e) => setAvailableCoursesSearch(e.target.value)}\r\n              className=\"mt-2 block w-full p-2 border border-gray-300 rounded-md shadow-sm\"\r\n            />\r\n          </div>\r\n          {/* Course List */}\r\n          {filteredAvailableCourses.length > 0 ? filteredAvailableCourses.map((course) => (\r\n            <div key={course.uniqueId} className=\"p-2 border-b flex justify-between items-center\">\r\n              <span>{course.courseCode}</span>\r\n              <button onClick={() => addCourseToPeriod(course)}>Add</button>\r\n            </div>\r\n          )) : <p>No courses found</p>}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Submit Button */}\r\n      <button\r\n        onClick={handleSubmit}\r\n        className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n        disabled={!selectedPeriod || !periodCourses[selectedPeriod]?.length}\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramCourses;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Websites/https---github.com-James119-nderema-Timetable_Frontend/app/program/programcourses/%5BprogramId%5D/page.js"],"sourcesContent":["'use client';\r\nimport ProgramCourses from \"@/Components/ProgramPage/ProgramCourses\";\r\n\r\nexport default function EditProgramCourses() {\r\n  return < ProgramCourses/>;\r\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,8OAAE,4IAAA,CAAA,UAAc;;;;;AACzB","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}