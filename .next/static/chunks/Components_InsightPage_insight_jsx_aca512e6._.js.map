{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/mike/Desktop/Timetable-web/Components/InsightPage/insight.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  LineChart, Line, \n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  ScatterChart, Scatter, ZAxis\n} from 'recharts';\n\nconst TimetableResourceAnalysis = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:9921/timetable/performance');\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch performance data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const formatDate = (timestamp) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  const chartData = data.map(item => ({\n    ...item,\n    formattedTimestamp: formatDate(item.timestamp)\n  })).reverse();\n\n  const summaryStats = data.length ? {\n    avgRoomsUsed: (data.reduce((sum, item) => sum + item.roomsUsed, 0) / data.length).toFixed(2),\n    avgLecturersAssigned: (data.reduce((sum, item) => sum + item.lecturersAssigned, 0) / data.length).toFixed(2),\n    avgTimeTaken: (data.reduce((sum, item) => sum + item.timeTaken, 0) / data.length).toFixed(2),\n    totalGenerations: data.length\n  } : {};\n\n  const getPerformanceTrend = () => {\n    if (chartData.length < 2) return { rooms: 0, lecturers: 0, time: 0 };\n    \n    const current = chartData[0];\n    const previous = chartData[1];\n    \n    return {\n      rooms: current.roomsUsed - previous.roomsUsed,\n      lecturers: current.lecturersAssigned - previous.lecturersAssigned,\n      time: current.timeTaken - previous.timeTaken,\n    };\n  };\n\n  const trend = data.length >= 2 ? getPerformanceTrend() : { rooms: 0, lecturers: 0, time: 0 };\n\n  const resourceDistribution = [\n    { name: 'Rooms', value: data.length ? data[0].roomsUsed : 0 },\n    { name: 'Lecturers', value: data.length ? data[0].lecturersAssigned : 0 },\n  ];\n\n  const COLORS = ['#4f46e5', '#059669', '#ea580c', '#8b5cf6'];\n  \n  const formatDateForChart = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.getMonth()+1}/${date.getDate()} ${date.getHours()}:${date.getMinutes()}`;\n  };\n\n  const simplifiedChartData = data.map(item => ({\n    id: item.id,\n    date: formatDateForChart(item.timestamp),\n    roomsUsed: item.roomsUsed,\n    lecturersAssigned: item.lecturersAssigned,\n    timeTaken: item.timeTaken / 1000, // Convert to seconds\n    totalResources: item.roomsUsed + item.lecturersAssigned,\n  })).reverse();\n\n  // Custom tooltip component for the combined chart\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-2 border border-gray-200 rounded  text-xs\">\n          <p className=\"font-medium\">{`Generation at ${label}`}</p>\n          {payload.map((entry, index) => (\n            <p key={index} style={{ color: entry.color }}>\n              {`${entry.name}: ${entry.value.toFixed(entry.dataKey === 'timeTaken' ? 2 : 0)}${entry.dataKey === 'timeTaken' ? 's' : ''}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Performance trend explanation\n  const trendExplanation = \"Performance trend shows the change between the last two generations. Negative values represent improvements (less resources or time taken).\";\n\n  // Calculate correlations and best/worst metrics\n  const calculateInsights = () => {\n    if (data.length < 2) return { correlations: null, best: null, worst: null, efficient: null };\n    \n    // Find best (minimum) and worst (maximum) time generations\n    const sortedByTime = [...data].sort((a, b) => a.timeTaken - b.timeTaken);\n    const best = sortedByTime[0];\n    const worst = sortedByTime[sortedByTime.length - 1];\n    \n    // Calculate correlation between resources and time\n    // Using simplified correlation calculation\n    const resourceTimeCorrelation = calculateCorrelation(\n      data.map(item => item.roomsUsed + item.lecturersAssigned),\n      data.map(item => item.timeTaken)\n    );\n    \n    // Find most efficient generation (most timetable entries with least resources and time)\n    // Assuming that lower id = more entries for simplicity\n    // In a real scenario, you might need a proper 'entriesCount' field\n    const efficiency = data.map(item => ({\n      ...item,\n      // Lower is better for this score (normalized resources and time)\n      efficiencyScore: (item.roomsUsed + item.lecturersAssigned) * item.timeTaken\n    }));\n    \n    const mostEfficient = efficiency.reduce((best, current) => \n      current.efficiencyScore < best.efficiencyScore ? current : best, efficiency[0]);\n    \n    return {\n      correlations: {\n        resourceTime: resourceTimeCorrelation,\n        trend: resourceTimeCorrelation > 0.5 ? 'More resources leads to longer generation time' :\n              resourceTimeCorrelation < -0.5 ? 'More resources leads to shorter generation time' :\n              'No clear correlation between resources and time'\n      },\n      best,\n      worst,\n      efficient: mostEfficient\n    };\n  };\n  \n  // Simple correlation calculation\n  const calculateCorrelation = (x, y) => {\n    const n = x.length;\n    if (n < 2) return 0;\n    \n    const sumX = x.reduce((a, b) => a + b, 0);\n    const sumY = y.reduce((a, b) => a + b, 0);\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);\n    const sumY2 = y.reduce((sum, yi) => sum + yi * yi, 0);\n    \n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY));\n    \n    return denominator === 0 ? 0 : numerator / denominator;\n  };\n\n  const insights = data.length ? calculateInsights() : null;\n\n  if (loading) return (\n    <div className=\"w-full h-96 flex items-center justify-center\">\n      <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500\"></div>\n    </div>\n  );\n\n  if (error) return (\n    <div className=\"w-full p-4 bg-red-50 text-red-600 rounded-lg\">\n      {error}\n    </div>\n  );\n\n  if (!data.length) return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-[95%] mx-auto\">\n        <div className=\"bg-white rounded-xl p-6 text-center\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Timetable Generation Analytics</h2>\n          <div className=\"py-12\">\n            <svg className=\"mx-auto h-16 w-16 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900\">No data available</h3>\n            <p className=\"mt-2 text-sm text-gray-600\">No timetable generation data has been recorded yet. After generating timetables, performance metrics will appear here.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-[95%] mx-auto space-y-6\">\n        <div className=\"bg-white  rounded-xl p-6\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Timetable Generation Analytics</h2>\n          \n          <div className=\"grid grid-cols-1 gap-6 mb-6\">\n            {/* Combined Line Chart */}\n            <div className=\"bg-white rounded-xl p-4 border border-gray-100\">\n              <h3 className=\"text-base font-semibold text-gray-700 mb-4\">Performance Metrics Over Time</h3>\n              <ResponsiveContainer width=\"100%\" height={350}>\n                <LineChart\n                  data={simplifiedChartData}\n                  margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                  <XAxis \n                    dataKey=\"date\" \n                    angle={-45} \n                    textAnchor=\"end\" \n                    height={60}\n                    tick={{ fontSize: 10 }}\n                  />\n                  <YAxis \n                    yAxisId=\"left\"\n                    tick={{ fontSize: 10 }}\n                    domain={['dataMin - 5', 'dataMax + 5']}\n                    label={{ value: 'Resources', angle: -90, position: 'insideLeft', style: { textAnchor: 'middle', fontSize: 10 } }}\n                  />\n                  <YAxis \n                    yAxisId=\"right\"\n                    orientation=\"right\"\n                    tick={{ fontSize: 10 }}\n                    domain={['dataMin - 0.5', 'dataMax + 0.5']}\n                    tickFormatter={(value) => `${value}s`}\n                    label={{ value: 'Time (s)', angle: 90, position: 'insideRight', style: { textAnchor: 'middle', fontSize: 10 } }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Legend />\n                  <Line \n                    yAxisId=\"left\"\n                    type=\"monotone\" \n                    dataKey=\"roomsUsed\" \n                    stroke=\"#4f46e5\" \n                    strokeWidth={2}\n                    dot={{ fill: '#4f46e5', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Rooms\"\n                  />\n                  <Line \n                    yAxisId=\"left\"\n                    type=\"monotone\" \n                    dataKey=\"lecturersAssigned\" \n                    stroke=\"#059669\" \n                    strokeWidth={2}\n                    dot={{ fill: '#059669', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Lecturers\"\n                  />\n                  <Line \n                    yAxisId=\"right\"\n                    type=\"monotone\" \n                    dataKey=\"timeTaken\" \n                    stroke=\"#ea580c\" \n                    strokeWidth={2}\n                    dot={{ fill: '#ea580c', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Time (s)\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n\n            {insights && insights.correlations && (\n              <div className=\"bg-white rounded-xl p-4 border border-gray-100\">\n                <h3 className=\"text-base font-semibold text-gray-700 mb-4\">Resource vs Time Insight</h3>\n                <div className=\"flex flex-col md:flex-row gap-6\">\n                  <div className=\"flex-1\">\n                    <div className=\"bg-indigo-50 p-3 rounded-lg mb-3\">\n                      <span className=\"block text-sm font-medium text-indigo-800\">Resource-Time Correlation</span>\n                      <span className=\"text-lg font-bold text-indigo-700\">{insights.correlations.resourceTime.toFixed(2)}</span>\n                      <p className=\"mt-1 text-xs text-indigo-600\">{insights.correlations.trend}</p>\n                    </div>\n                    <p className=\"text-sm text-gray-600\">\n                      Correlation ranges from -1 to 1. Values close to 1 indicate that using more resources increases generation time,\n                      while values close to -1 suggest that more resources lead to faster generation. Values near 0 show no clear pattern.\n                    </p>\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"bg-gray-50 p-3 rounded-lg\">\n                      <span className=\"block text-sm font-medium text-gray-800\">Performance Trend Explanation</span>\n                      <p className=\"mt-1 text-xs text-gray-600\">{trendExplanation}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {data.length >= 1 && (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              {/* Best Performance Card */}\n              {insights && insights.best && (\n                <div className=\"bg-green-50 rounded-xl p-4 border border-green-100\">\n                  <h3 className=\"text-base font-semibold text-green-800 mb-3\">Best Performance</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-green-700\">Generation ID:</span>\n                      <span className=\"text-sm font-semibold text-green-800\">{insights.best.id}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-green-700\">Time Taken:</span>\n                      <span className=\"text-sm font-semibold text-green-800\">{(insights.best.timeTaken / 1000).toFixed(2)}s</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-green-700\">Resources Used:</span>\n                      <span className=\"text-sm font-semibold text-green-800\">\n                        {insights.best.roomsUsed + insights.best.lecturersAssigned} (R: {insights.best.roomsUsed}, L: {insights.best.lecturersAssigned})\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-green-700\">Date:</span>\n                      <span className=\"text-sm font-semibold text-green-800\">{new Date(insights.best.timestamp).toLocaleDateString()}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Worst Performance Card */}\n              {insights && insights.worst && (\n                <div className=\"bg-red-50 rounded-xl p-4 border border-red-100\">\n                  <h3 className=\"text-base font-semibold text-red-800 mb-3\">Slowest Performance</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-red-700\">Generation ID:</span>\n                      <span className=\"text-sm font-semibold text-red-800\">{insights.worst.id}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-red-700\">Time Taken:</span>\n                      <span className=\"text-sm font-semibold text-red-800\">{(insights.worst.timeTaken / 1000).toFixed(2)}s</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-red-700\">Resources Used:</span>\n                      <span className=\"text-sm font-semibold text-red-800\">\n                        {insights.worst.roomsUsed + insights.worst.lecturersAssigned} (R: {insights.worst.roomsUsed}, L: {insights.worst.lecturersAssigned})\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-red-700\">Date:</span>\n                      <span className=\"text-sm font-semibold text-red-800\">{new Date(insights.worst.timestamp).toLocaleDateString()}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Most Efficient Generation */}\n              {insights && insights.efficient && (\n                <div className=\"bg-blue-50 rounded-xl p-4 border border-blue-100\">\n                  <h3 className=\"text-base font-semibold text-blue-800 mb-3\">Most Efficient Generation</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-blue-700\">Generation ID:</span>\n                      <span className=\"text-sm font-semibold text-blue-800\">{insights.efficient.id}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-blue-700\">Time Taken:</span>\n                      <span className=\"text-sm font-semibold text-blue-800\">{(insights.efficient.timeTaken / 1000).toFixed(2)}s</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-blue-700\">Resources Used:</span>\n                      <span className=\"text-sm font-semibold text-blue-800\">\n                        {insights.efficient.roomsUsed + insights.efficient.lecturersAssigned} (R: {insights.efficient.roomsUsed}, L: {insights.efficient.lecturersAssigned})\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-xs text-blue-700\">Efficiency Score:</span>\n                      <span className=\"text-sm font-semibold text-blue-800\">\n                        {(insights.efficient.efficiencyScore / 1000).toFixed(0)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {data.length >= 1 && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n              <div className=\"bg-white rounded-xl p-4 border border-gray-100 flex flex-col justify-center\">\n                <h3 className=\"text-base font-semibold text-gray-700 mb-4\">Latest Performance</h3>\n                {data.length > 0 && (\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Rooms:</span>\n                      <span className=\"text-xl font-bold text-indigo-600\">{data[0].roomsUsed}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Lecturers:</span>\n                      <span className=\"text-xl font-bold text-emerald-600\">{data[0].lecturersAssigned}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Time:</span>\n                      <span className=\"text-xl font-bold text-orange-600\">{(data[0].timeTaken / 1000).toFixed(2)}s</span>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"bg-white rounded-xl p-4 border border-gray-100 flex flex-col justify-center\">\n                <h3 className=\"text-base font-semibold text-gray-700 mb-4\">Performance Trend</h3>\n                <p className=\"text-xs text-gray-600 mb-2\">{trendExplanation}</p>\n                {data.length >= 2 && (\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Rooms:</span>\n                      <span className={`text-xl font-bold ${trend.rooms > 0 ? 'text-red-500' : trend.rooms < 0 ? 'text-green-500' : 'text-gray-500'}`}>\n                        {trend.rooms > 0 ? `+${trend.rooms}` : trend.rooms}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Lecturers:</span>\n                      <span className={`text-xl font-bold ${trend.lecturers > 0 ? 'text-red-500' : trend.lecturers < 0 ? 'text-green-500' : 'text-gray-500'}`}>\n                        {trend.lecturers > 0 ? `+${trend.lecturers}` : trend.lecturers}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Time:</span>\n                      <span className={`text-xl font-bold ${trend.time > 0 ? 'text-red-500' : trend.time < 0 ? 'text-green-500' : 'text-gray-500'}`}>\n                        {trend.time > 0 ? `+${(trend.time / 1000).toFixed(2)}s` : `${(trend.time / 1000).toFixed(2)}s`}\n                      </span>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <div className=\"bg-indigo-50 p-4 rounded-xl\">\n            <h3 className=\"text-sm font-semibold text-indigo-800\">Avg Rooms Used</h3>\n            <p className=\"text-2xl font-bold text-indigo-600 mt-2\">{summaryStats.avgRoomsUsed}</p>\n          </div>\n          <div className=\"bg-emerald-50 p-4 rounded-xl\">\n            <h3 className=\"text-sm font-semibold text-emerald-800\">Avg Lecturers</h3>\n            <p className=\"text-2xl font-bold text-emerald-600 mt-2\">{summaryStats.avgLecturersAssigned}</p>\n          </div>\n          <div className=\"bg-orange-50 p-4 rounded-xl\">\n            <h3 className=\"text-sm font-semibold text-orange-800\">Avg Time (ms)</h3>\n            <p className=\"text-2xl font-bold text-orange-600 mt-2\">{summaryStats.avgTimeTaken}</p>\n          </div>\n          <div className=\"bg-purple-50 p-4 rounded-xl\">\n            <h3 className=\"text-sm font-semibold text-purple-800\">Total Generations</h3>\n            <p className=\"text-2xl font-bold text-purple-600 mt-2\">{summaryStats.totalGenerations}</p>\n          </div>\n        </div>\n\n        <div className=\"bg-white border rounded-xl overflow-hidden\">\n          <div className=\"p-4 border-b\">\n            <h2 className=\"text-lg font-bold text-gray-800\">Generation History</h2>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th className=\"p-3 text-left text-sm text-gray-600 font-semibold\">ID</th>\n                  <th className=\"p-3 text-left text-sm text-gray-600 font-semibold\">Timestamp</th>\n                  <th className=\"p-3 text-left text-sm text-gray-600 font-semibold\">Rooms</th>\n                  <th className=\"p-3 text-left text-sm text-gray-600 font-semibold\">Lecturers</th>\n                  <th className=\"p-3 text-left text-sm text-gray-600 font-semibold\">Time (ms)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((item) => (\n                  <tr key={item.id} className=\"border-t border-gray-100 hover:bg-gray-50 transition-colors\">\n                    <td className=\"p-3 text-sm text-gray-800\">{item.id}</td>\n                    <td className=\"p-3 text-sm text-gray-800\">{formatDate(item.timestamp)}</td>\n                    <td className=\"p-3 text-sm text-gray-800\">{item.roomsUsed}</td>\n                    <td className=\"p-3 text-sm text-gray-800\">{item.lecturersAssigned}</td>\n                    <td className=\"p-3 text-sm text-gray-800\">{item.timeTaken}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TimetableResourceAnalysis;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAMA,MAAM,4BAA4B;;IAChC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+CAAE;YACR,MAAM;iEAAY;oBAChB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,SAAS,MAAM,SAAS,IAAI;wBAClC,QAAQ;wBACR,WAAW;oBACb,EAAE,OAAO,KAAK;wBACZ,SAAS;wBACT,WAAW;oBACb;gBACF;;YACA;QACF;8CAAG,EAAE;IAEL,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,WAAW,cAAc;IAC3C;IAEA,MAAM,YAAY,KAAK,GAAG,CAAC,CAAA,OAAQ,CAAC;YAClC,GAAG,IAAI;YACP,oBAAoB,WAAW,KAAK,SAAS;QAC/C,CAAC,GAAG,OAAO;IAEX,MAAM,eAAe,KAAK,MAAM,GAAG;QACjC,cAAc,CAAC,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,SAAS,EAAE,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC;QAC1F,sBAAsB,CAAC,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,iBAAiB,EAAE,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC;QAC1G,cAAc,CAAC,KAAK,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,SAAS,EAAE,KAAK,KAAK,MAAM,EAAE,OAAO,CAAC;QAC1F,kBAAkB,KAAK,MAAM;IAC/B,IAAI,CAAC;IAEL,MAAM,sBAAsB;QAC1B,IAAI,UAAU,MAAM,GAAG,GAAG,OAAO;YAAE,OAAO;YAAG,WAAW;YAAG,MAAM;QAAE;QAEnE,MAAM,UAAU,SAAS,CAAC,EAAE;QAC5B,MAAM,WAAW,SAAS,CAAC,EAAE;QAE7B,OAAO;YACL,OAAO,QAAQ,SAAS,GAAG,SAAS,SAAS;YAC7C,WAAW,QAAQ,iBAAiB,GAAG,SAAS,iBAAiB;YACjE,MAAM,QAAQ,SAAS,GAAG,SAAS,SAAS;QAC9C;IACF;IAEA,MAAM,QAAQ,KAAK,MAAM,IAAI,IAAI,wBAAwB;QAAE,OAAO;QAAG,WAAW;QAAG,MAAM;IAAE;IAE3F,MAAM,uBAAuB;QAC3B;YAAE,MAAM;YAAS,OAAO,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG;QAAE;QAC5D;YAAE,MAAM;YAAa,OAAO,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,iBAAiB,GAAG;QAAE;KACzE;IAED,MAAM,SAAS;QAAC;QAAW;QAAW;QAAW;KAAU;IAE3D,MAAM,qBAAqB,CAAC;QAC1B,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,GAAG,KAAK,QAAQ,KAAG,EAAE,CAAC,EAAE,KAAK,OAAO,GAAG,CAAC,EAAE,KAAK,QAAQ,GAAG,CAAC,EAAE,KAAK,UAAU,IAAI;IACzF;IAEA,MAAM,sBAAsB,KAAK,GAAG,CAAC,CAAA,OAAQ,CAAC;YAC5C,IAAI,KAAK,EAAE;YACX,MAAM,mBAAmB,KAAK,SAAS;YACvC,WAAW,KAAK,SAAS;YACzB,mBAAmB,KAAK,iBAAiB;YACzC,WAAW,KAAK,SAAS,GAAG;YAC5B,gBAAgB,KAAK,SAAS,GAAG,KAAK,iBAAiB;QACzD,CAAC,GAAG,OAAO;IAEX,kDAAkD;IAClD,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE;QAC/C,IAAI,UAAU,WAAW,QAAQ,MAAM,EAAE;YACvC,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;kCAAe,CAAC,cAAc,EAAE,OAAO;;;;;;oBACnD,QAAQ,GAAG,CAAC,CAAC,OAAO,sBACnB,6LAAC;4BAAc,OAAO;gCAAE,OAAO,MAAM,KAAK;4BAAC;sCACxC,GAAG,MAAM,IAAI,CAAC,EAAE,EAAE,MAAM,KAAK,CAAC,OAAO,CAAC,MAAM,OAAO,KAAK,cAAc,IAAI,KAAK,MAAM,OAAO,KAAK,cAAc,MAAM,IAAI;2BADpH;;;;;;;;;;;QAMhB;QACA,OAAO;IACT;IAEA,gCAAgC;IAChC,MAAM,mBAAmB;IAEzB,gDAAgD;IAChD,MAAM,oBAAoB;QACxB,IAAI,KAAK,MAAM,GAAG,GAAG,OAAO;YAAE,cAAc;YAAM,MAAM;YAAM,OAAO;YAAM,WAAW;QAAK;QAE3F,2DAA2D;QAC3D,MAAM,eAAe;eAAI;SAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,GAAG,EAAE,SAAS;QACvE,MAAM,OAAO,YAAY,CAAC,EAAE;QAC5B,MAAM,QAAQ,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;QAEnD,mDAAmD;QACnD,2CAA2C;QAC3C,MAAM,0BAA0B,qBAC9B,KAAK,GAAG,CAAC,CAAA,OAAQ,KAAK,SAAS,GAAG,KAAK,iBAAiB,GACxD,KAAK,GAAG,CAAC,CAAA,OAAQ,KAAK,SAAS;QAGjC,wFAAwF;QACxF,uDAAuD;QACvD,mEAAmE;QACnE,MAAM,aAAa,KAAK,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACnC,GAAG,IAAI;gBACP,iEAAiE;gBACjE,iBAAiB,CAAC,KAAK,SAAS,GAAG,KAAK,iBAAiB,IAAI,KAAK,SAAS;YAC7E,CAAC;QAED,MAAM,gBAAgB,WAAW,MAAM,CAAC,CAAC,MAAM,UAC7C,QAAQ,eAAe,GAAG,KAAK,eAAe,GAAG,UAAU,MAAM,UAAU,CAAC,EAAE;QAEhF,OAAO;YACL,cAAc;gBACZ,cAAc;gBACd,OAAO,0BAA0B,MAAM,mDACjC,0BAA0B,CAAC,MAAM,oDACjC;YACR;YACA;YACA;YACA,WAAW;QACb;IACF;IAEA,iCAAiC;IACjC,MAAM,uBAAuB,CAAC,GAAG;QAC/B,MAAM,IAAI,EAAE,MAAM;QAClB,IAAI,IAAI,GAAG,OAAO;QAElB,MAAM,OAAO,EAAE,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG;QACvC,MAAM,OAAO,EAAE,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG;QACvC,MAAM,QAAQ,EAAE,MAAM,CAAC,CAAC,KAAK,IAAI,IAAM,MAAM,KAAK,CAAC,CAAC,EAAE,EAAE;QACxD,MAAM,QAAQ,EAAE,MAAM,CAAC,CAAC,KAAK,KAAO,MAAM,KAAK,IAAI;QACnD,MAAM,QAAQ,EAAE,MAAM,CAAC,CAAC,KAAK,KAAO,MAAM,KAAK,IAAI;QAEnD,MAAM,YAAY,IAAI,QAAQ,OAAO;QACrC,MAAM,cAAc,KAAK,IAAI,CAAC,CAAC,IAAI,QAAQ,OAAO,IAAI,IAAI,CAAC,IAAI,QAAQ,OAAO,IAAI;QAElF,OAAO,gBAAgB,IAAI,IAAI,YAAY;IAC7C;IAEA,MAAM,WAAW,KAAK,MAAM,GAAG,sBAAsB;IAErD,IAAI,SAAS,qBACX,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;;;;;;;;;;IAInB,IAAI,OAAO,qBACT,6LAAC;QAAI,WAAU;kBACZ;;;;;;IAIL,IAAI,CAAC,KAAK,MAAM,EAAE,qBAChB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;gCAAkC,MAAK;gCAAO,SAAQ;gCAAY,QAAO;0CACtF,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAK,GAAE;;;;;;;;;;;0CAEzE,6LAAC;gCAAG,WAAU;0CAAyC;;;;;;0CACvD,6LAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOpD,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAuC;;;;;;sCAErD,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA6C;;;;;;sDAC3D,6LAAC,sKAAA,CAAA,sBAAmB;4CAAC,OAAM;4CAAO,QAAQ;sDACxC,cAAA,6LAAC,wJAAA,CAAA,YAAS;gDACR,MAAM;gDACN,QAAQ;oDAAE,KAAK;oDAAI,OAAO;oDAAI,MAAM;oDAAI,QAAQ;gDAAG;;kEAEnD,6LAAC,gKAAA,CAAA,gBAAa;wDAAC,iBAAgB;wDAAM,QAAO;;;;;;kEAC5C,6LAAC,wJAAA,CAAA,QAAK;wDACJ,SAAQ;wDACR,OAAO,CAAC;wDACR,YAAW;wDACX,QAAQ;wDACR,MAAM;4DAAE,UAAU;wDAAG;;;;;;kEAEvB,6LAAC,wJAAA,CAAA,QAAK;wDACJ,SAAQ;wDACR,MAAM;4DAAE,UAAU;wDAAG;wDACrB,QAAQ;4DAAC;4DAAe;yDAAc;wDACtC,OAAO;4DAAE,OAAO;4DAAa,OAAO,CAAC;4DAAI,UAAU;4DAAc,OAAO;gEAAE,YAAY;gEAAU,UAAU;4DAAG;wDAAE;;;;;;kEAEjH,6LAAC,wJAAA,CAAA,QAAK;wDACJ,SAAQ;wDACR,aAAY;wDACZ,MAAM;4DAAE,UAAU;wDAAG;wDACrB,QAAQ;4DAAC;4DAAiB;yDAAgB;wDAC1C,eAAe,CAAC,QAAU,GAAG,MAAM,CAAC,CAAC;wDACrC,OAAO;4DAAE,OAAO;4DAAY,OAAO;4DAAI,UAAU;4DAAe,OAAO;gEAAE,YAAY;gEAAU,UAAU;4DAAG;wDAAE;;;;;;kEAEhH,6LAAC,0JAAA,CAAA,UAAO;wDAAC,uBAAS,6LAAC;;;;;;;;;;kEACnB,6LAAC,yJAAA,CAAA,SAAM;;;;;kEACP,6LAAC,uJAAA,CAAA,OAAI;wDACH,SAAQ;wDACR,MAAK;wDACL,SAAQ;wDACR,QAAO;wDACP,aAAa;wDACb,KAAK;4DAAE,MAAM;4DAAW,GAAG;wDAAE;wDAC7B,WAAW;4DAAE,GAAG;wDAAE;wDAClB,MAAK;;;;;;kEAEP,6LAAC,uJAAA,CAAA,OAAI;wDACH,SAAQ;wDACR,MAAK;wDACL,SAAQ;wDACR,QAAO;wDACP,aAAa;wDACb,KAAK;4DAAE,MAAM;4DAAW,GAAG;wDAAE;wDAC7B,WAAW;4DAAE,GAAG;wDAAE;wDAClB,MAAK;;;;;;kEAEP,6LAAC,uJAAA,CAAA,OAAI;wDACH,SAAQ;wDACR,MAAK;wDACL,SAAQ;wDACR,QAAO;wDACP,aAAa;wDACb,KAAK;4DAAE,MAAM;4DAAW,GAAG;wDAAE;wDAC7B,WAAW;4DAAE,GAAG;wDAAE;wDAClB,MAAK;;;;;;;;;;;;;;;;;;;;;;;gCAMZ,YAAY,SAAS,YAAY,kBAChC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA6C;;;;;;sDAC3D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAK,WAAU;8EAA4C;;;;;;8EAC5D,6LAAC;oEAAK,WAAU;8EAAqC,SAAS,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC;;;;;;8EAChG,6LAAC;oEAAE,WAAU;8EAAgC,SAAS,YAAY,CAAC,KAAK;;;;;;;;;;;;sEAE1E,6LAAC;4DAAE,WAAU;sEAAwB;;;;;;;;;;;;8DAKvC,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAK,WAAU;0EAA0C;;;;;;0EAC1D,6LAAC;gEAAE,WAAU;0EAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAQtD,KAAK,MAAM,IAAI,mBACd,6LAAC;4BAAI,WAAU;;gCAEZ,YAAY,SAAS,IAAI,kBACxB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA8C;;;;;;sDAC5D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAyB;;;;;;sEACzC,6LAAC;4DAAK,WAAU;sEAAwC,SAAS,IAAI,CAAC,EAAE;;;;;;;;;;;;8DAE1E,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAyB;;;;;;sEACzC,6LAAC;4DAAK,WAAU;;gEAAwC,CAAC,SAAS,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC;gEAAG;;;;;;;;;;;;;8DAEtG,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAyB;;;;;;sEACzC,6LAAC;4DAAK,WAAU;;gEACb,SAAS,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC,iBAAiB;gEAAC;gEAAM,SAAS,IAAI,CAAC,SAAS;gEAAC;gEAAM,SAAS,IAAI,CAAC,iBAAiB;gEAAC;;;;;;;;;;;;;8DAGnI,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAyB;;;;;;sEACzC,6LAAC;4DAAK,WAAU;sEAAwC,IAAI,KAAK,SAAS,IAAI,CAAC,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;gCAOnH,YAAY,SAAS,KAAK,kBACzB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA4C;;;;;;sDAC1D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAuB;;;;;;sEACvC,6LAAC;4DAAK,WAAU;sEAAsC,SAAS,KAAK,CAAC,EAAE;;;;;;;;;;;;8DAEzE,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAuB;;;;;;sEACvC,6LAAC;4DAAK,WAAU;;gEAAsC,CAAC,SAAS,KAAK,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC;gEAAG;;;;;;;;;;;;;8DAErG,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAuB;;;;;;sEACvC,6LAAC;4DAAK,WAAU;;gEACb,SAAS,KAAK,CAAC,SAAS,GAAG,SAAS,KAAK,CAAC,iBAAiB;gEAAC;gEAAM,SAAS,KAAK,CAAC,SAAS;gEAAC;gEAAM,SAAS,KAAK,CAAC,iBAAiB;gEAAC;;;;;;;;;;;;;8DAGvI,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAuB;;;;;;sEACvC,6LAAC;4DAAK,WAAU;sEAAsC,IAAI,KAAK,SAAS,KAAK,CAAC,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;gCAOlH,YAAY,SAAS,SAAS,kBAC7B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA6C;;;;;;sDAC3D,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEAAuC,SAAS,SAAS,CAAC,EAAE;;;;;;;;;;;;8DAE9E,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;;gEAAuC,CAAC,SAAS,SAAS,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC;gEAAG;;;;;;;;;;;;;8DAE1G,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;;gEACb,SAAS,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAC,iBAAiB;gEAAC;gEAAM,SAAS,SAAS,CAAC,SAAS;gEAAC;gEAAM,SAAS,SAAS,CAAC,iBAAiB;gEAAC;;;;;;;;;;;;;8DAGvJ,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEACb,CAAC,SAAS,SAAS,CAAC,eAAe,GAAG,IAAI,EAAE,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBASlE,KAAK,MAAM,IAAI,mBACd,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA6C;;;;;;wCAC1D,KAAK,MAAM,GAAG,mBACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEAAqC,IAAI,CAAC,EAAE,CAAC,SAAS;;;;;;;;;;;;8DAExE,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;sEAAsC,IAAI,CAAC,EAAE,CAAC,iBAAiB;;;;;;;;;;;;8DAEjF,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAU;;gEAAqC,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,EAAE,OAAO,CAAC;gEAAG;;;;;;;;;;;;;;;;;;;;;;;;;8CAMnG,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA6C;;;;;;sDAC3D,6LAAC;4CAAE,WAAU;sDAA8B;;;;;;wCAC1C,KAAK,MAAM,IAAI,mBACd,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAW,CAAC,kBAAkB,EAAE,MAAM,KAAK,GAAG,IAAI,iBAAiB,MAAM,KAAK,GAAG,IAAI,mBAAmB,iBAAiB;sEAC5H,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,KAAK,EAAE,GAAG,MAAM,KAAK;;;;;;;;;;;;8DAGtD,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAW,CAAC,kBAAkB,EAAE,MAAM,SAAS,GAAG,IAAI,iBAAiB,MAAM,SAAS,GAAG,IAAI,mBAAmB,iBAAiB;sEACpI,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,SAAS,EAAE,GAAG,MAAM,SAAS;;;;;;;;;;;;8DAGlE,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAU;sEAAwB;;;;;;sEACxC,6LAAC;4DAAK,WAAW,CAAC,kBAAkB,EAAE,MAAM,IAAI,GAAG,IAAI,iBAAiB,MAAM,IAAI,GAAG,IAAI,mBAAmB,iBAAiB;sEAC1H,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAU9G,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAE,WAAU;8CAA2C,aAAa,YAAY;;;;;;;;;;;;sCAEnF,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAyC;;;;;;8CACvD,6LAAC;oCAAE,WAAU;8CAA4C,aAAa,oBAAoB;;;;;;;;;;;;sCAE5F,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAE,WAAU;8CAA2C,aAAa,YAAY;;;;;;;;;;;;sCAEnF,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,6LAAC;oCAAE,WAAU;8CAA2C,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;8BAIzF,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAG,WAAU;0CAAkC;;;;;;;;;;;sCAElD,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAM,WAAU;;kDACf,6LAAC;kDACC,cAAA,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;oDAAG,WAAU;8DAAoD;;;;;;8DAClE,6LAAC;oDAAG,WAAU;8DAAoD;;;;;;8DAClE,6LAAC;oDAAG,WAAU;8DAAoD;;;;;;8DAClE,6LAAC;oDAAG,WAAU;8DAAoD;;;;;;8DAClE,6LAAC;oDAAG,WAAU;8DAAoD;;;;;;;;;;;;;;;;;kDAGtE,6LAAC;kDACE,KAAK,GAAG,CAAC,CAAC,qBACT,6LAAC;gDAAiB,WAAU;;kEAC1B,6LAAC;wDAAG,WAAU;kEAA6B,KAAK,EAAE;;;;;;kEAClD,6LAAC;wDAAG,WAAU;kEAA6B,WAAW,KAAK,SAAS;;;;;;kEACpE,6LAAC;wDAAG,WAAU;kEAA6B,KAAK,SAAS;;;;;;kEACzD,6LAAC;wDAAG,WAAU;kEAA6B,KAAK,iBAAiB;;;;;;kEACjE,6LAAC;wDAAG,WAAU;kEAA6B,KAAK,SAAS;;;;;;;+CALlD,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAelC;GAtdM;KAAA;uCAwdS","debugId":null}}]
}