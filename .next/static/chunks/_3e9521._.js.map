{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/mike/Desktop/https---github.com-James119-nderema-Timetable_Frontend/Components/ProgramPage/ProgramCourses.jsx"],"sourcesContent":["'use client';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\n\nconst ProgramCourses = () => {\n  const [periods, setPeriods] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [selectedPeriod, setSelectedPeriod] = useState('');\n  const [availableCoursesSearch, setAvailableCoursesSearch] = useState('');\n  const [periodCoursesSearch, setPeriodCoursesSearch] = useState('');\n  const [periodCourses, setPeriodCourses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch periods and courses from the API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const [periodsResponse, coursesResponse] = await Promise.all([\n          axios.get('http://localhost:9921/periods'),\n          axios.get('http://localhost:9921/courses'),\n        ]);\n        \n        // Improved period name formatting\n        const safePeriods = periodsResponse.data.map((period, index) => {\n          // Default naming if no specific name is provided\n          let formattedName = period.name || `Y${Math.floor(index/2) + 1}S${(index % 2) + 1}`;\n          \n          return {\n            ...period,\n            uniqueId: period.id ? `period-${period.id}` : `period-${index}`,\n            name: formattedName\n          };\n        });\n\n        const safeCourses = coursesResponse.data.map((course, index) => ({\n          ...course,\n          uniqueId: course.id ? `course-${course.id}` : `course-${index}`,\n          courseCode: course.courseCode || course.code || `COURSE-${index + 1}`,\n          name: course.name || `Unnamed Course ${index + 1}`,\n          department: course.department || 'Unknown Department'\n        }));\n        \n        setPeriods(safePeriods);\n        setCourses(safeCourses);\n        \n        // Set first period as selected, with fallback\n        if (safePeriods.length > 0) {\n          setSelectedPeriod(safePeriods[0].uniqueId);\n        }\n      } catch (err) {\n        console.error('Detailed Fetch Error:', err);\n        setError(`Failed to load data: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Filter available courses\n  const filteredAvailableCourses = useMemo(() => {\n    const currentPeriodCourses = periodCourses[selectedPeriod] || [];\n    return courses.filter(\n      (course) =>\n        course.uniqueId && \n        !currentPeriodCourses.some((c) => c.uniqueId === course.uniqueId) &&\n        course.courseCode.toLowerCase().includes(availableCoursesSearch.toLowerCase())\n    );\n  }, [availableCoursesSearch, selectedPeriod, periodCourses, courses]);\n\n  // Filter courses for the selected period\n  const filteredPeriodCourses = useMemo(() => {\n    return (periodCourses[selectedPeriod] || []).filter(\n      (course) =>\n        course.uniqueId && \n        course.courseCode.toLowerCase().includes(periodCoursesSearch.toLowerCase())\n    );\n  }, [periodCoursesSearch, selectedPeriod, periodCourses]);\n\n  // Add course to the selected period\n  const addCourseToPeriod = (course) => {\n    setPeriodCourses((prev) => ({\n      ...prev,\n      [selectedPeriod]: [...(prev[selectedPeriod] || []), course],\n    }));\n  };\n\n  // Remove course from the selected period\n  const removeCourseFromPeriod = (courseToRemove) => {\n    setPeriodCourses((prev) => ({\n      ...prev,\n      [selectedPeriod]: prev[selectedPeriod]?.filter((course) => course.uniqueId !== courseToRemove.uniqueId) || [],\n    }));\n  };\n\n  // Submit selected courses\n  const submitSelectedCourses = async () => {\n    try {\n      // Find the selected period's actual ID (removing the 'period-' prefix)\n      const periodId = selectedPeriod.replace('period-', '');\n      \n      // Hardcoded programId - you would typically pass this as a prop or from context\n      const programId = '1'; // Replace with actual program ID\n\n      // Extract course IDs, removing the 'course-' prefix\n      const courseIds = (periodCourses[selectedPeriod] || []).map(course => \n        course.uniqueId.replace('course-', '')\n      );\n\n      // Submit courses sequentially\n      for (const courseId of courseIds) {\n        await axios.post('http://localhost:9921/programCourse', {\n          programId,\n          periodId,\n          courseId\n        });\n      }\n\n      // Clear the selected courses after successful submission\n      setPeriodCourses(prev => ({\n        ...prev,\n        [selectedPeriod]: []\n      }));\n\n      // Optional: Add a success notification\n      alert('Courses submitted successfully!');\n    } catch (err) {\n      console.error('Submission Error:', err);\n      alert('Failed to submit courses');\n    }\n  };\n\n  // Render loading state\n  if (loading) return <div className=\"p-6 text-center\">Loading...</div>;\n\n  // Render error state\n  if (error) return <div className=\"p-6 text-red-500\">{error}</div>;\n\n  // Render no data state\n  if (periods.length === 0) {\n    return <div className=\"p-6 text-center text-gray-500\">No periods available</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold\">Program Courses Dashboard</h1>\n        <p className=\"text-gray-600\">Manage courses for each period of the program.</p>\n      </div>\n\n      <div className=\"mb-4\">\n        <label htmlFor=\"period-select\" className=\"block text-sm font-medium text-gray-700\">\n          Select Period\n        </label>\n        <select\n          id=\"period-select\"\n          value={selectedPeriod}\n          onChange={(e) => setSelectedPeriod(e.target.value)}\n          className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm\"\n        >\n          {periods.map((period) => (\n            <option \n              key={period.uniqueId} \n              value={period.uniqueId}\n            >\n              {period.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-6\">\n        {/* Available Courses Column */}\n        <div className=\"border rounded-lg shadow-md\">\n          <div className=\"p-4 border-b\">\n            <h2 className=\"text-lg font-semibold\">Available Courses</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Search available courses\"\n              value={availableCoursesSearch}\n              onChange={(e) => setAvailableCoursesSearch(e.target.value)}\n              className=\"mt-2 block w-full p-2 border border-gray-300 rounded-md shadow-sm\"\n            />\n          </div>\n          <div className=\"h-96 overflow-y-auto p-4\">\n            {filteredAvailableCourses.map((course) => (\n              <div\n                key={course.uniqueId}\n                className=\"flex justify-between items-center p-2 border-b hover:bg-gray-100\"\n              >\n                <div>\n                  <p className=\"font-medium\">{course.courseCode}</p>\n                  <p className=\"text-sm text-gray-500\">{course.name}</p>\n                </div>\n                <button\n                  onClick={() => addCourseToPeriod(course)}\n                  className=\"text-green-600 hover:text-green-800\"\n                >\n                  Add\n                </button>\n              </div>\n            ))}\n            {filteredAvailableCourses.length === 0 && (\n              <p className=\"text-center text-gray-500\">No courses found</p>\n            )}\n          </div>\n        </div>\n\n        {/* Period Courses Column */}\n        <div className=\"border rounded-lg shadow-md\">\n          <div className=\"p-4 border-b\">\n            <h2 className=\"text-lg font-semibold\">Courses for Selected Period</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Search added courses\"\n              value={periodCoursesSearch}\n              onChange={(e) => setPeriodCoursesSearch(e.target.value)}\n              className=\"mt-2 block w-full p-2 border border-gray-300 rounded-md shadow-sm\"\n            />\n          </div>\n          <div className=\"h-96 overflow-y-auto p-4\">\n            {filteredPeriodCourses.map((course) => (\n              <div\n                key={course.uniqueId}\n                className=\"flex justify-between items-center p-2 border-b hover:bg-gray-100\"\n              >\n                <div>\n                  <p className=\"font-medium\">{course.courseCode}</p>\n                  <p className=\"text-sm text-gray-500\">{course.name}</p>\n                </div>\n                <button\n                  onClick={() => removeCourseFromPeriod(course)}\n                  className=\"text-red-600 hover:text-red-800\"\n                >\n                  Remove\n                </button>\n              </div>\n            ))}\n            {filteredPeriodCourses.length === 0 && (\n              <p className=\"text-center text-gray-500\">No courses added</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Submit Button */}\n      <div className=\"mt-6 text-center\">\n        <button\n          onClick={submitSelectedCourses}\n          disabled={!(periodCourses[selectedPeriod] && periodCourses[selectedPeriod].length > 0)}\n          className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n        >\n          Submit Selected Courses\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgramCourses;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///home/mike/Desktop/https---github.com-James119-nderema-Timetable_Frontend/app/program/programcourses/%5BprogramId%5D/page.js"],"sourcesContent":["'use client';\nimport ProgramCourses from \"@/Components/ProgramPage/ProgramCourses\";\n\nexport default function EditProgramCourses() {\n  return < ProgramCourses/>;\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,6LAAE,+IAAA,CAAA,UAAc;;;;;AACzB;KAFwB"}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}